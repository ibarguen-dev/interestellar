---
interface Props {
  title: string;
  content: string;
  image: string;
  reverse?: boolean;
  video?: string;
}

const { title, content, image, reverse = false, video = "https://player.vimeo.com/video/108650530" } = Astro.props;
---

<section class={`min-h-screen w-full flex items-center justify-center p-4 md:p-8 ${reverse ? 'bg-opacity-90 bg-gray-900' : 'bg-opacity-80 bg-black'}`}>
  <div class={`container w-full max-w-7xl mx-auto flex flex-col md:flex-row items-center gap-8 md:gap-12 ${reverse ? 'md:flex-row-reverse' : ''}`}>
    <div class="w-full md:w-1/2" data-aos={reverse ? "fade-left" : "fade-right"}>
      <img 
        src={image} 
        alt={title} 
        class="rounded-lg shadow-2xl w-full h-[300px] md:h-[400px] object-cover cursor-pointer hover:opacity-90 transition-opacity" 
        loading="lazy"
        onclick="openModal(this)"
        data-video={video}
      />
    </div>
    <div class="w-full md:w-1/2 space-y-4 md:space-y-6 text-center md:text-left px-4 md:px-0" data-aos={reverse ? "fade-right" : "fade-left"}>
      <h2 class="text-3xl md:text-4xl font-bold leading-tight">{title}</h2>
      <p class="text-lg md:text-xl leading-relaxed text-gray-300">{content}</p>
    </div>
  </div>
</section>

<!-- Modal -->
<div id="videoModal" class="fixed inset-0 bg-black bg-opacity-90 hidden items-center justify-center z-50 p-4">
  <div class="relative w-full max-w-4xl mx-auto">
    <button onclick="closeModal()" class="absolute -top-10 right-0 text-white text-4xl hover:text-gray-300">&times;</button>
    <div class="relative pt-[56.25%]">
      <iframe id="videoFrame" class="absolute inset-0 w-full h-full rounded-lg" frameborder="0" allow="autoplay; fullscreen; picture-in-picture" allowfullscreen></iframe>
    </div>
  </div>
</div>

<script is:inline>
  function openModal(img) {
    const modal = document.getElementById('videoModal');
    const videoFrame = document.getElementById('videoFrame');
    const videoUrl = img.dataset.video;
    
    videoFrame.src = videoUrl;
    modal.classList.remove('hidden');
    modal.classList.add('flex');
    document.body.style.overflow = 'hidden';
  }

  function closeModal() {
    const modal = document.getElementById('videoModal');
    const videoFrame = document.getElementById('videoFrame');
    
    videoFrame.src = '';
    modal.classList.add('hidden');
    modal.classList.remove('flex');
    document.body.style.overflow = '';
  }

  // Close modal when clicking outside
  document.getElementById('videoModal').addEventListener('click', function(e) {
    if (e.target === this) {
      closeModal();
    }
  });

  // Close modal with Escape key
  document.addEventListener('keydown', function(e) {
    if (e.key === 'Escape') {
      closeModal();
    }
  });
</script>